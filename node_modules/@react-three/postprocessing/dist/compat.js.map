{"version":3,"file":"compat.js","sources":["../src/compat.js"],"sourcesContent":["import * as THREE from 'three'\n\nconst version = /* @__PURE__ */ (() => parseInt(THREE.REVISION.replace(/\\D+/g, '')))()\n\n// NOTE: WebGLMultipleRenderTargets is removed since r172, so we implement it ourselves.\n// https://github.com/mrdoob/three.js/pull/26427\nexport const WebGLMultipleRenderTargets =\n  version >= 162\n    ? class extends THREE.WebGLRenderTarget {\n        constructor(width = 1, height = 1, count = 1, options = {}) {\n          super(width, height, { ...options, count })\n\n          this.isWebGLMultipleRenderTargets = true\n        }\n\n        get texture() {\n          return this.textures\n        }\n      }\n    : class extends THREE.WebGLRenderTarget {\n        constructor(width = 1, height = 1, count = 1, options = {}) {\n          super(width, height, options)\n\n          this.isWebGLMultipleRenderTargets = true\n\n          const texture = this.texture\n\n          this.texture = []\n\n          for (let i = 0; i < count; i++) {\n            this.texture[i] = texture.clone()\n            this.texture[i].isRenderTargetTexture = true\n          }\n        }\n\n        setSize(width, height, depth = 1) {\n          if (this.width !== width || this.height !== height || this.depth !== depth) {\n            this.width = width\n            this.height = height\n            this.depth = depth\n\n            for (let i = 0, il = this.texture.length; i < il; i++) {\n              this.texture[i].image.width = width\n              this.texture[i].image.height = height\n              this.texture[i].image.depth = depth\n            }\n\n            this.dispose()\n          }\n\n          this.viewport.set(0, 0, width, height)\n          this.scissor.set(0, 0, width, height)\n        }\n\n        copy(source) {\n          this.dispose()\n\n          this.width = source.width\n          this.height = source.height\n          this.depth = source.depth\n\n          this.scissor.copy(source.scissor)\n          this.scissorTest = source.scissorTest\n\n          this.viewport.copy(source.viewport)\n\n          this.depthBuffer = source.depthBuffer\n          this.stencilBuffer = source.stencilBuffer\n\n          if (source.depthTexture !== null) this.depthTexture = source.depthTexture.clone()\n\n          this.texture.length = 0\n\n          for (let i = 0, il = source.texture.length; i < il; i++) {\n            this.texture[i] = source.texture[i].clone()\n            this.texture[i].isRenderTargetTexture = true\n          }\n\n          return this\n        }\n      }\n"],"names":[],"mappings":";AAEA,MAAM,UAA2B,uBAAM,SAAS,MAAM,SAAS,QAAQ,QAAQ,EAAE,CAAC,GAAI;AAI1E,MAAC,6BACX,WAAW,MACP,cAAc,MAAM,kBAAkB;AAAA,EACpC,YAAY,QAAQ,GAAG,SAAS,GAAG,QAAQ,GAAG,UAAU,IAAI;AAC1D,UAAM,OAAO,QAAQ,EAAE,GAAG,SAAS,MAAK,CAAE;AAE1C,SAAK,+BAA+B;AAAA,EACrC;AAAA,EAED,IAAI,UAAU;AACZ,WAAO,KAAK;AAAA,EACb;AACF,IACD,cAAc,MAAM,kBAAkB;AAAA,EACpC,YAAY,QAAQ,GAAG,SAAS,GAAG,QAAQ,GAAG,UAAU,IAAI;AAC1D,UAAM,OAAO,QAAQ,OAAO;AAE5B,SAAK,+BAA+B;AAEpC,UAAM,UAAU,KAAK;AAErB,SAAK,UAAU,CAAE;AAEjB,aAAS,IAAI,GAAG,IAAI,OAAO,KAAK;AAC9B,WAAK,QAAQ,CAAC,IAAI,QAAQ,MAAO;AACjC,WAAK,QAAQ,CAAC,EAAE,wBAAwB;AAAA,IACzC;AAAA,EACF;AAAA,EAED,QAAQ,OAAO,QAAQ,QAAQ,GAAG;AAChC,QAAI,KAAK,UAAU,SAAS,KAAK,WAAW,UAAU,KAAK,UAAU,OAAO;AAC1E,WAAK,QAAQ;AACb,WAAK,SAAS;AACd,WAAK,QAAQ;AAEb,eAAS,IAAI,GAAG,KAAK,KAAK,QAAQ,QAAQ,IAAI,IAAI,KAAK;AACrD,aAAK,QAAQ,CAAC,EAAE,MAAM,QAAQ;AAC9B,aAAK,QAAQ,CAAC,EAAE,MAAM,SAAS;AAC/B,aAAK,QAAQ,CAAC,EAAE,MAAM,QAAQ;AAAA,MAC/B;AAED,WAAK,QAAS;AAAA,IACf;AAED,SAAK,SAAS,IAAI,GAAG,GAAG,OAAO,MAAM;AACrC,SAAK,QAAQ,IAAI,GAAG,GAAG,OAAO,MAAM;AAAA,EACrC;AAAA,EAED,KAAK,QAAQ;AACX,SAAK,QAAS;AAEd,SAAK,QAAQ,OAAO;AACpB,SAAK,SAAS,OAAO;AACrB,SAAK,QAAQ,OAAO;AAEpB,SAAK,QAAQ,KAAK,OAAO,OAAO;AAChC,SAAK,cAAc,OAAO;AAE1B,SAAK,SAAS,KAAK,OAAO,QAAQ;AAElC,SAAK,cAAc,OAAO;AAC1B,SAAK,gBAAgB,OAAO;AAE5B,QAAI,OAAO,iBAAiB;AAAM,WAAK,eAAe,OAAO,aAAa,MAAO;AAEjF,SAAK,QAAQ,SAAS;AAEtB,aAAS,IAAI,GAAG,KAAK,OAAO,QAAQ,QAAQ,IAAI,IAAI,KAAK;AACvD,WAAK,QAAQ,CAAC,IAAI,OAAO,QAAQ,CAAC,EAAE,MAAO;AAC3C,WAAK,QAAQ,CAAC,EAAE,wBAAwB;AAAA,IACzC;AAED,WAAO;AAAA,EACR;AACT;"}