import { jsx as _jsx } from "react/jsx-runtime";
import React from 'react';
class ErrorBoundary extends React.Component {
    constructor(props) {
        super(props);
        this.state = {
            hasError: false,
            error: null,
            errorInfo: null,
        };
    }
    static getDerivedStateFromError(error) {
        return {
            hasError: true,
            error,
        };
    }
    componentDidCatch(error, errorInfo) {
        this.setState({
            error: error,
            errorInfo: errorInfo,
        });
    }
    render() {
        if (this.state.hasError) {
            const Fallback = this.props.fallback;
            return (_jsx(Fallback, { error: this.state.error, errorInfo: this.state.errorInfo, retry: () => this.setState({ hasError: false }) }));
        }
        return this.props.children;
    }
}
export default ErrorBoundary;
