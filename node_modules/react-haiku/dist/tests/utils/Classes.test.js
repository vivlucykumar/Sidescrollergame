import { jsx as _jsx } from "react/jsx-runtime";
import { render, screen } from '@testing-library/react';
import { Classes } from '../../utils/Classes';
describe('Classes component', () => {
    const text = 'Classes Block';
    it('renders the Classes component', () => {
        const { asFragment } = render(_jsx(Classes, { className: "base-class", children: text }));
        expect(asFragment()).toMatchSnapshot();
        expect(screen.getByText(text)).toBeInTheDocument();
    });
    it('renders with base className', () => {
        render(_jsx(Classes, { className: "base-class", children: text }));
        const element = screen.queryByText(text);
        expect(element).toHaveClass('base-class');
    });
    it('applies toggleClasses when condition is true', () => {
        render(_jsx(Classes, { as: "section", className: "base-class", toggleClasses: { 'active-class': true }, children: text }));
        const element = screen.getByText(text);
        expect(element).toHaveClass('base-class active-class');
    });
    it('does not apply toggleClasses when condition is false', () => {
        render(_jsx(Classes, { className: "base-class", toggleClasses: { 'inactive-class': false }, children: text }));
        const element = screen.getByText(text);
        expect(element).not.toHaveClass('inactive-class');
    });
    it('removes duplicate classes', () => {
        render(_jsx(Classes, { className: "base-class", toggleClasses: { 'active-class focus base-class': true }, children: text }));
        const element = screen.getByText(text);
        expect(element).toHaveClass('base-class active-class focus');
    });
});
